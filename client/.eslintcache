[{"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/index.js":"1","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/reportWebVitals.js":"2","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/App.js":"3","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Signup.js":"4","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Battle.js":"5","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Instructions.js":"6","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Loser.js":"7","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Login.js":"8","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/Header/index.js":"9","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/utils/auth.js":"10","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/utils/mutations.js":"11","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/HPbar/enemyHPbar.js":"12","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/announcer.js":"13","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/player.js":"14","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/Wincount.js":"15","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/HPbar/HPbar.js":"16","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/Hud/Hud.js":"17"},{"size":543,"mtime":1662528590427,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1662527872513,"results":"20","hashOfConfig":"19"},{"size":2434,"mtime":1662527872510,"results":"21","hashOfConfig":"19"},{"size":2354,"mtime":1662571459533,"results":"22","hashOfConfig":"19"},{"size":3639,"mtime":1662527872512,"results":"23","hashOfConfig":"19"},{"size":1660,"mtime":1662527872512,"results":"24","hashOfConfig":"19"},{"size":365,"mtime":1662571338583,"results":"25","hashOfConfig":"19"},{"size":2829,"mtime":1662527872512,"results":"26","hashOfConfig":"19"},{"size":969,"mtime":1662527872511,"results":"27","hashOfConfig":"19"},{"size":817,"mtime":1662527872513,"results":"28","hashOfConfig":"19"},{"size":437,"mtime":1662571338583,"results":"29","hashOfConfig":"19"},{"size":966,"mtime":1662571338583,"results":"30","hashOfConfig":"19"},{"size":262,"mtime":1662527872511,"results":"31","hashOfConfig":"19"},{"size":3169,"mtime":1662527872511,"results":"32","hashOfConfig":"19"},{"size":219,"mtime":1662527872511,"results":"33","hashOfConfig":"19"},{"size":920,"mtime":1662571338583,"results":"34","hashOfConfig":"19"},{"size":7446,"mtime":1662527872512,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xqweq5",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/index.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/reportWebVitals.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/App.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Signup.js",["72"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { MUTATION_ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nvar validator = require(\"validator\");\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser] = useMutation(MUTATION_ADD_USER);\n\n  // Update state based on form input changes\n  const formChanges = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // Function to allow submitting of form\n  const submitForm = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const navigate = useNavigate();\n\n  function moveInstructions() {\n    navigate(\"/instructions\");\n  }\n\n  return (\n    <main className=\"flex-row justify-center\">\n      <div>\n        <div className=\"card\">\n          <h2>Signup</h2>\n          <div className=\"card-body\">\n            <form className=\"form-styling\" onSubmit={submitForm}>\n              <label for=\"email\">Email</label>\n              <br />\n              <input\n                placeholder=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={formState.email}\n                onChange={formChanges}\n              />\n              <br />\n              <label for=\"password\">Password</label>\n              <br />\n              <input\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                value={formState.password}\n                onChange={formChanges}\n              />\n              <br />\n              <button\n                className=\"btn btn-danger\"\n                style={{ cursor: \"pointer\" }}\n                type=\"submit\"\n                onClick={moveInstructions}\n              >\n                Signup\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Battle.js",["73"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Announcer from \"../components/BattlePage/announcer\";\nimport Wincount from \"../components/BattlePage/Wincount\";\nimport Player from \"../components/BattlePage/player\";\n\nimport Hud from \"../components/Hud/Hud\";\nimport HPbar from \"../components/BattlePage/HPbar/HPbar\";\nimport EnemyHPbar from \"../components/BattlePage/HPbar/enemyHPbar\";\n\nconst Battle = ({ winCount }) => {\n  let initialHP = 100 + winCount * 5;\n\n  const navigate = useNavigate();\n\n  const [ourHP, setHP] = useState(initialHP);\n  const [enemyHP, setEnemyHP] = useState(initialHP);\n  const [haveGone, setHaveGone] = useState(false);\n  const [announcement, setAnnouncement] = useState(\"Fight!\");\n  const [playerWins, setPlayerWins] = useState(0);\n\n  useEffect(() => {\n    if (enemyHP < 1) {\n      setAnnouncement(\"you won!\");\n      winCount = winCount + 1;\n      setPlayerWins(playerWins + 1);\n      setHP(initialHP);\n      setEnemyHP(initialHP);\n      setHaveGone(false);\n    }\n    if (ourHP < 1) {\n      navigate('/Loser')\n    }\n  }, [enemyHP, ourHP, winCount]);\n\n  const slap = () => {\n    if (haveGone) {\n      alert(\"You've already gone this turn, you must end your turn.\");\n    } else {\n      setEnemyHP(enemyHP - 20);\n      setAnnouncement(\"You slapped them!\");\n    }\n    setHaveGone(true);\n  };\n\n  const nap = () => {\n    if (haveGone) {\n      alert(\"You've already gone this turn, you must end your turn.\");\n    } else {\n      if (ourHP + 30 > 100 + winCount * 5) {\n        let fullhp = 100 + winCount * 5 - ourHP;\n        setHP(ourHP + fullhp);\n        setAnnouncement(\"You healed to full hp!\");\n      } else {\n        setHP(ourHP + 30);\n        setAnnouncement(\"You healed +30hp!\");\n      }\n    }\n    setHaveGone(true);\n  };\n\n  const runOver = () => {\n    if (haveGone) {\n      alert(\"You've already gone this turn, you must end your turn.\");\n    } else {\n      let hitChance = Math.random() * 10;\n      if (hitChance > 0 && hitChance < 2.5) {\n        setAnnouncement(\"OHHHH! You ran them over! -50HP!\");\n        setEnemyHP(enemyHP - 50);\n      } else {\n        console.log(hitChance);\n        setAnnouncement(\"Uh oh, you missed!\");\n      }\n    }\n    setHaveGone(true);\n  };\n\n  const runAway = () => {\n    navigate(\"/instructions\")\n  }\n\n  const enemyAttack = () => {\n    if (!haveGone) {\n      setAnnouncement(\"Enemy has already gone, it's your turn!\");\n    } else {\n      setHP(ourHP - 20);\n      setHaveGone(false);\n      setAnnouncement(\"You just got slapped! -20hp\");\n    }\n  };\n\n  return (\n    <div className=\"battle-page\">\n      <div className=\"row\">\n        <Wincount wins={playerWins} />\n      </div>\n      <div className=\"row\" style={{ display: \"flex\", height: \"500px\" }}>\n        <div className=\"col hud-images\">\n          <Hud slap={slap} nap={nap} runover={runOver} runaway={runAway}/>\n        </div>\n        <div className=\"col\">\n          <button\n            className=\"text-light\"\n            style={{ height: \"20%\", width: \"20%\", margin: \"0px\" }}\n            onClick={enemyAttack}\n          >\n            End Turn\n          </button>\n        </div>\n        <div className=\"player-img col\">\n          <Player />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <HPbar currentHP={ourHP} maxHP={100 + winCount * 5} />\n          <EnemyHPbar\n            enemyCurrentHP={enemyHP}\n            enemyMaxHP={100 + winCount * 5}\n          />\n        </div>\n        <div className=\"col\">\n          <Announcer announcement={announcement} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Battle;\n","/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Instructions.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Loser.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/pages/Login.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/Header/index.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/utils/auth.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/utils/mutations.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/HPbar/enemyHPbar.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/announcer.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/player.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/Wincount.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/BattlePage/HPbar/HPbar.js",[],"/Users/lilykot/Desktop/elder-warfare-kart-simulator/client/src/components/Hud/Hud.js",[],{"ruleId":"74","severity":1,"message":"75","line":7,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":25,"column":18,"nodeType":"80","endLine":25,"endColumn":30},"no-unused-vars","'validator' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'winCount' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression"]