{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","pages/Instructions.js","pages/Battle.js","pages/Loser.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","MUTATION_ADD_USER","token","this","getToken","isTokenExpired","decode","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Login","props","useState","username","password","formState","setFormState","useMutation","login","error","data","formChanges","event","target","name","value","submitForm","preventDefault","variables","Auth","console","className","to","onSubmit","placeholder","type","onChange","onchange","style","cursor","message","Signup","characterName","addUser","Instructions","Battle","Loser","src","Header","loggedIn","onClick","logout","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.913f821c.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const MUTATION_ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!) {\n    addUser(username: $username, password: $password) {\n      _id\n      username\n      password\n    }\n  }\n`;\n\nexport const MUTATION_DEL_USER = gql`\n    mutation deleteUser($_id: ID)\n        deleteUser(_id: $_id) {\n            _id\n            username\n            password\n            character\n        }\n`;\n\nexport const MUTATION_ADD_CHARACTER = gql`\n    mutation addCharacter($name: String!)\n        addCharction(name: $name){\n            _id\n            name\n            hp\n            damage\n            hitChance\n            dodge\n            credits\n            items\n            abilities\n        }\n`;\n\n// export const MUTATION_UPDATE_CHARACTER  = gql`\n//     mutation updateCharacter($_id: ID)\n//         updateCharacter(_id: $_id){\n\n//         }\n// `\n\nexport const MUTATION_UPDATE_CHARACTER_ITEM = gql`\n    mutation updateCharacterItem($_id: ID)\n        updateChracterItem(_id: $_id){\n            _id\n            items {\n                name\n                description\n            }\n        }\n`;\nexport const MUTATION_UPDATE_CHARACTER_ABILITY = gql`\n    mutation updateCharacterAbility($_id: ID)\n        updateCharacterAbility(_id: $_id){\n            _id\n            abilities {\n                name\n                description\n            }\n        }\n`;\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  loggedIn() {\n    const token = this.getToken();\n    // If there's a token and it hasn't expired yet, return true. Else, return false\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token in order to get its expiration time that was set by the server\n    const decoded = decode(token);\n\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ username: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // Update state based on form input changes\n  const formChanges = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // Function to allow submitting of form\n  const submitForm = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (error) {\n      console.error(error);\n    }\n\n    // Clear form values once form is submitted\n    setFormState({\n      username: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12\">\n        <div className=\"card\">\n          <h4 className=\"text-light\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                <Link to=\"/instructions\">Head to Instructions Page</Link>\n              </p>\n            ) : (\n              <form onSubmit={submitForm}>\n                <input\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"username\"\n                  value={formState.username}\n                  onChange={formChanges}\n                />\n                <input\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onchange={formChanges}\n                />\n                <button\n                  className=\"btn btn-danger\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Login\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"bg-danger text-white\">{error.message}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { MUTATION_ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    password: \"\",\n    characterName: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(MUTATION_ADD_USER);\n\n  // Update state based on form input changes\n  const formChanges = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // Function to allow submitting of form\n  const submitForm = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center\">\n      <div>\n        <div className=\"card\">\n          <h4 className=\"text-light\">Signup</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                <Link to=\"/instructions\">Head to Instructions Page</Link>\n              </p>\n            ) : (\n              <form onSubmit={submitForm}>\n                <input\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"username\"\n                  value={formState.username}\n                  onChange={formChanges}\n                />\n                <input\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onchange={formChanges}\n                />\n                <input\n                  placeholder=\"Character Name\"\n                  name=\"characterName\"\n                  value={formState.characterName}\n                  onChange={formChanges}\n                />\n                <button\n                  className=\"btn btn-danger\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Signup\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"bg-danger text-white\">{error.message}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import '../index.css';\nimport { Link } from \"react-router-dom\";\n\nfunction Instructions() {\n    return (\n        <div className=\"instructions\">\n            <h1>Welcome to Elder Warfare Kart Simulator!</h1>\n            <h3>Here is all you need to know to play:</h3>\n            <h4>The game is centered around turn based combat and purchasing items to boost your stats.</h4>\n            <h4>You have HP and attack stats, your attack stat modifies the damage your abilities do.</h4>\n            <h4>After combat, you are taken to a store page where you can choose to buy items for the next battle.</h4>\n            <h4>You have four abilities:</h4>\n            <ul>\n                <li>Slap: Basic attack, high hit chance.</li>\n                <li>Nap time: replenishes hp</li>\n                <li>Run-over: High damage attack with low hit chance</li>\n                <li>Run-away: leave the battle.</li>\n            </ul>\n            <h4>If you lose, your account is permanently deleted.</h4>\n            <button className=\"continue-button\"><Link to=\"/Battle\">Play!</Link></button>\n        </div>\n    )\n}\n\nexport default Instructions;\n","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useMutation } from \"@apollo/client\";\n\nconst Battle = (props) => {\n    // const enemy = {hp: 100+(wins * 5), attack: 1 +(wins * 5)}\n    // const [HP, setHP] = useState(100 + itemHP);\n    // const [enemyHP, setEnemyHP] = useState(enemy.hp)\n\n \n    return (\n        <div>\n            <h1>Fight!</h1>\n        </div>\n    );\n};\n\nexport default Battle;","import React from \"react\";\n\nfunction Loser() {\n\nreturn (\n    <main className=\"flex-row justify-center\">\n        <div>\n            <video src=\"client/public/assets/game-over-video.mp4\"></video>\n        </div>\n    </main>\n)\n\n};\n\nexport default Loser;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../../utils/auth\";\n// import logoVideo from \"client/public/assets/logoVideo.mp4\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-danger text-light align-center\">\n      <div className=\"container flex-row justify-center align-center\">\n        {/* <div>\n          <Link className=\"text-light\" to=\"/\">\n            <video src={logoVideo} type=\"video/mp4\" />\n          </Link>\n        </div> */}\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <button className=\"btn btn-danger\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-danger\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-danger\" to=\"/signup\">\n                Signup\n              </Link>\n              <Link className=\"btn btn-danger\" to=\"/instructions\">\n                Instructions\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-danger text-light\">\n      <div className=\"text-center\">\n        <h4>\n          Made by Jonathan Mengal, Pat Barkley, Lily Kot, and Liam McCarthy\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n// import \"./App.css\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Instructions from \"./pages/Instructions\";\nimport Storefront from \"./pages/Storefront\";\nimport Battle from \"./pages/Battle\";\nimport Loser from \"./pages/Loser\";\nimport Header from \"./components/Header/index\";\nimport Footer from \"./components/Footer/index\";\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start\">\n          <Header />\n        </div>\n        <div>\n        <Routes>\n          <Route path=\"/\" element={<Login />}></Route>\n          <Route path=\"/signup\" element={<Signup />}></Route>\n          <Route path=\"/instructions\" element={<Instructions />}></Route>\n          <Route path=\"/store\" element={<Storefront />}></Route>\n          <Route path=\"/battle\" element={<Battle />}></Route>\n          <Route path=\"/loser\" element={<Loser />}></Route>\n        </Routes>\n        </div>\n        <div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}